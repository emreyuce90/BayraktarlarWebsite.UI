@model TicketListDto
@{
    Layout = "_AdminLayout";
    ViewBag.Title = "Atadığım Görevler";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb mt-4">
        <li class="breadcrumb-item"><a asp-action="Dashboard" asp-controller="Home"><i class="fa fa-home" aria-hidden="true"></i> Ana Sayfa</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Atadığım Görevler</a></li>
    </ol>
</nav>

@if (Model.Tickets.Count > 0)
{
    <div class="mt-2 ml-1">

        <table class="table-hover table-striped" id="ticketList" width="100%">
            <thead>
                <tr>
                    <th>Görev Atanan Plasiyer</th>
                    <th>Görev Yazılış Tarihi</th>
                    <th>Görevin Başlığı</th>
                    <th>Görevin İçeriği</th>
                    <th>Görevin Aciliyeti</th>
                    <th>Görev Durumu</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var t in Model.Tickets)
                {
                    <tr>
                        <td>@t.User.FirstName @t.User.LastName</td>
                        <td>@t.CreatedDate</td>
                        <td>@t.Subject</td>
                        <td>@t.Detail</td>
                        <td>
                            @{
                                if (t.Urgency.Id == 1)
                                {
                                    <span class="badge badge-info mb-1"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                }
                                else if (t.UrgencyId == 2)
                                {
                                    <span class="badge badge-warning mb-1 text-white"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                }
                                else
                                {
                                    <span class="badge badge-danger mb-1"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                }
                            }
                        </td>
                        <td>
                            @{
                                if (t.IsClosed)
                                {
                                    <p class="text-success">Tamamlandı</p>
                                }
                                else
                                {
                                    <p class="text-danger">Tamamlanmadı</p>

                                }
                            }
                        </td>

                    </tr>

                }
            </tbody>
        </table>
    </div>

    @*<div class="mt-2">
        <div class="row">
            @foreach (var t in Model.Tickets)
            {
                <div class="col-md-4">
                    <div class="mt-2">
                        <div class="card">
                            <div class="card-header">
                                Ticket ID #@t.Id - @t.User.UserName

                                <span style="float:right">@t.CreatedDate</span>
                            </div>
                            <div class="card-body">
                                <div>
                                    @{
                                        if (t.Urgency.Id == 1)
                                        {
                                            <span class="badge badge-info mb-1"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                        }
                                        else if (t.UrgencyId == 2)
                                        {
                                            <span class="badge badge-warning mb-1 text-white"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger mb-1"><i class="fa fa-flag" aria-hidden="true"></i> @t.Urgency.UrgencyName</span>
                                        }
                                    }
@*                                    <span style="float:right"><a asp-action="UpdateTicket" asp-controller="Ticket" asp-route-ticketId="@t.Id" class="btn btn-link">Düzenle <i class="fa fa-edit" aria-hidden="true"></i></a> </span>
                                    <h5 class="card-title">@t.Subject</h5>

                                </div>
                                <p class="card-text">@t.Detail</p>


                            </div>
                            @{

                                if (DateTime.Now.Date < t.RemainderDate.Date)
                                {
                                    <div class="card-footer text-muted text-center">
                                        Görev Hatırlatma Zamanı :  <i class="fa fa-clock"></i> @t.RemainderDate.ToString("f")
                                    </div>
                                }
                                else
                                {

                                }
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>*@
}
else
{
    <div class="mt-2">

        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Harika!</strong> Tamamlanmamış göreviniz yok tüm görevleriniz tamamlandı!
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>


    </div>
}

@section scripts{
    <script>
        $(document).ready(function() {
            $('#ticketList').DataTable({
                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",

                language:
                {
                    "emptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "infoEmpty": "Kayıt yok",
                    "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "infoThousands": ".",
                    "lengthMenu": "Sayfada _MENU_ kayıt göster",
                    "loadingRecords": "Yükleniyor...",
                    "processing": "İşleniyor...",
                    "search": "Ara:",
                    "zeroRecords": "Eşleşen kayıt bulunamadı",
                    "paginate": {
                        "first": "İlk",
                        "last": "Son",
                        "next": "Sonraki",
                        "previous": "Önceki"
                    },
                    "aria": {
                        "sortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "1": "1 kayıt seçildi"
                        },
                        "cells": {
                            "1": "1 hücre seçildi",
                            "_": "%d hücre seçildi"
                        },
                        "columns": {
                            "1": "1 sütun seçildi",
                            "_": "%d sütun seçildi"
                        }
                    },
                    "autoFill": {
                        "cancel": "İptal",
                        "fillHorizontal": "Hücreleri yatay olarak doldur",
                        "fillVertical": "Hücreleri dikey olarak doldur",
                        "fill": "Bütün hücreleri <i>%d<\/i> ile doldur"
                    },
                    "buttons": {
                        "collection": "Koleksiyon <span class=\"ui-button-icon-primary ui-icon ui-icon-triangle-1-s\"><\/span>",
                        "colvis": "Sütun görünürlüğü",
                        "colvisRestore": "Görünürlüğü eski haline getir",
                        "copySuccess": {
                            "1": "1 satır panoya kopyalandı",
                            "_": "%ds satır panoya kopyalandı"
                        },
                        "copyTitle": "Panoya kopyala",
                        "csv": "CSV",
                        "excel": "Excel",
                        "pageLength": {
                            "-1": "Bütün satırları göster",
                            "_": "%d satır göster"
                        },
                        "pdf": "PDF",
                        "print": "Yazdır",
                        "copy": "Kopyala",
                        "copyKeys": "Tablodaki veriyi kopyalamak için CTRL veya u2318 + C tuşlarına basınız. İptal etmek için bu mesaja tıklayın veya escape tuşuna basın."
                    },
                    "searchBuilder": {
                        "add": "Koşul Ekle",
                        "button": {
                            "0": "Arama Oluşturucu",
                            "_": "Arama Oluşturucu (%d)"
                        },
                        "condition": "Koşul",
                        "conditions": {
                            "date": {
                                "after": "Sonra",
                                "before": "Önce",
                                "between": "Arasında",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notBetween": "Dışında",
                                "notEmpty": "Dolu"
                            },
                            "number": {
                                "between": "Arasında",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "gt": "Büyüktür",
                                "gte": "Büyük eşittir",
                                "lt": "Küçüktür",
                                "lte": "Küçük eşittir",
                                "not": "Değildir",
                                "notBetween": "Dışında",
                                "notEmpty": "Dolu"
                            },
                            "string": {
                                "contains": "İçerir",
                                "empty": "Boş",
                                "endsWith": "İle biter",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notEmpty": "Dolu",
                                "startsWith": "İle başlar"
                            },
                            "array": {
                                "contains": "İçerir",
                                "empty": "Boş",
                                "equals": "Eşittir",
                                "not": "Değildir",
                                "notEmpty": "Dolu",
                                "without": "Hariç"
                            }
                        },
                        "data": "Veri",
                        "deleteTitle": "Filtreleme kuralını silin",
                        "leftTitle": "Kriteri dışarı çıkart",
                        "logicAnd": "ve",
                        "logicOr": "veya",
                        "rightTitle": "Kriteri içeri al",
                        "title": {
                            "0": "Arama Oluşturucu",
                            "_": "Arama Oluşturucu (%d)"
                        },
                        "value": "Değer",
                        "clearAll": "Filtreleri Temizle"
                    },
                    "searchPanes": {
                        "clearMessage": "Hepsini Temizle",
                        "collapse": {
                            "0": "Arama Bölmesi",
                            "_": "Arama Bölmesi (%d)"
                        },
                        "count": "{total}",
                        "countFiltered": "{shown}\/{total}",
                        "emptyPanes": "Arama Bölmesi yok",
                        "loadMessage": "Arama Bölmeleri yükleniyor ...",
                        "title": "Etkin filtreler - %d"
                    },
                    "thousands": ".",
                    "datetime": {
                        "amPm": [
                            "öö",
                            "ös"
                        ],
                        "hours": "Saat",
                        "minutes": "Dakika",
                        "next": "Sonraki",
                        "previous": "Önceki",
                        "seconds": "Saniye",
                        "unknown": "Bilinmeyen",
                        "weekdays": {
                            "6": "Paz",
                            "5": "Cmt",
                            "4": "Cum",
                            "3": "Per",
                            "2": "Çar",
                            "1": "Sal",
                            "0": "Pzt"
                        },
                        "months": {
                            "9": "Ekim",
                            "8": "Eylül",
                            "7": "Ağustos",
                            "6": "Temmuz",
                            "5": "Haziran",
                            "4": "Mayıs",
                            "3": "Nisan",
                            "2": "Mart",
                            "11": "Aralık",
                            "10": "Kasım",
                            "1": "Şubat",
                            "0": "Ocak"
                        }
                    },
                    "decimal": ",",
                    "editor": {
                        "close": "Kapat",
                        "create": {
                            "button": "Yeni",
                            "submit": "Kaydet",
                            "title": "Yeni kayıt oluştur"
                        },
                        "edit": {
                            "button": "Düzenle",
                            "submit": "Güncelle",
                            "title": "Kaydı düzenle"
                        },
                        "error": {
                            "system": "Bir sistem hatası oluştu (Ayrıntılı bilgi)"
                        },
                        "multi": {
                            "info": "Seçili kayıtlar bu alanda farklı değerler içeriyor. Seçili kayıtların hepsinde bu alana aynı değeri atamak için buraya tıklayın; aksi halde her kayıt bu alanda kendi değerini koruyacak.",
                            "noMulti": "Bu alan bir grup olarak değil ancak tekil olarak düzenlenebilir.",
                            "restore": "Değişiklikleri geri al",
                            "title": "Çoklu değer"
                        },
                        "remove": {
                            "button": "Sil",
                            "confirm": {
                                "_": "%d adet kaydı silmek istediğinize emin misiniz?",
                                "1": "Bu kaydı silmek istediğinizden emin misiniz?"
                            },
                            "submit": "Sil",
                            "title": "Kayıtları sil"
                        }
                    }
                }
            });
        });
    </script>
}